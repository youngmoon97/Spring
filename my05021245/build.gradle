plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 스프링 부트로 웹 개발 시 사용
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// jdbc를 좀 더 간편하게 이용하기 위해 사용
	// xml로 SQL을 그대로 사용할 수 있다
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
	// 자주 사용하는 코드들을 자동으로 작성해준다
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// 개발 편의성을 위한 라이브러리
	// 실제 작동과 크게 상관 없음
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// 개발 테스트용 데이터베이스, 자체 IDE, 콘솔 제공
	runtimeOnly 'com.h2database:h2'
	// 개발 편의성을 위한 라이브러리
	// 실제 작동과 크게 상관 없음
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	// 코드가 잘 작동하는 테스트하는 라이브러리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'


	// JSP 파일을 인식하는 라이브러리
	// main 아래 webapp 폴더 안의 JSP만 인식한다
	// JSP 이외의 템플릿은 resources/templates에 작성한다
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

}

tasks.named('test') {
	useJUnitPlatform()
}
